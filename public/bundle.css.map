{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/GalleryStacks.svelte",
    "../src/Image.svelte",
    "../src/GalleryExpanded.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let name;\n\timport GalleryStacks from './GalleryStacks.svelte';\n\timport { activeCollection } from './stores.js';\n\n\tlet uid = 1;\n\tlet y;\n\tlet collection1 = [\n\t\t{ src: 'IMG_0003.JPG' },\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0005.JPG' },\n\t\t{ src: 'IMG_0007.JPG' },\n\t\t{ src: 'IMG_0008.JPG' },\n\t\t{ src: 'IMG_0009.JPG' },\n\t\t{ src: 'IMG_0010.JPG' }\n\t];\n\tlet collection2 = [\n\t\t{ src: 'IMG_0007.JPG' },\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0005.JPG' },\n\t\t{ src: 'IMG_0007.JPG' },\n\t\t{ src: 'IMG_0008.JPG' },\n\t\t{ src: 'IMG_0009.JPG' },\n\t\t{ src: 'IMG_0010.JPG' }\n\t];\n\tlet collection3 = [\n\t\t{ src: 'IMG_0009.JPG' },\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0005.JPG' },\n\t\t{ src: 'IMG_0007.JPG' },\n\t\t{ src: 'IMG_0008.JPG' },\n\t\t{ src: 'IMG_0009.JPG' },\n\t\t{ src: 'IMG_0010.JPG' }\n\t];\n\tlet collection4 = [\n\t\t{ src: 'IMG_0010.JPG' },\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0005.JPG' },\n\t\t{ src: 'IMG_0007.JPG' },\n\t\t{ src: 'IMG_0008.JPG' },\n\t\t{ src: 'IMG_0010.JPG' }\n\t];\n\tlet collection5 = [\n\t\t{ src: 'IMG_0008.JPG' },\n\t\t{ src: 'IMG_0004.JPG' }\n\t];\n\tlet collection6 = [\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0004.JPG' },\n\t\t{ src: 'IMG_0005.JPG' }\n\t];\n\n\tfunction handleExpand(event) {\n\t\tconsole.log(event.detail.active);\n\t\tactiveCollection.update(n => event.detail.active);\n\t}\n</script>\n\n<style>\n\t.container{\n\t\tdisplay: flex;\n\t\tflex: 1 auto;\n\t\tflex-basis: 15%;\n\t\tflex-flow: row wrap;\n\t\talign-content: flex-start;\n\t\tjustify-content: center;\n\t\theight: 100%;\n\t\twidth: auto;\n\t\tmargin: 40px 1em 1em;\n\t}\n\t.container :global(.collection) {\n\t\twidth: calc(25em - 3em);\n\t\tmargin: 1em 1.5em 3em 1.5em;\n\t\theight: 15em;\n\t}\n</style>\n<!-- <BreadBar on:click={handleBreadBarClick} /> -->\n<div class=\"container\">\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection1} id=\"{uid++}\" name=\"Spider\"/>\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection2} id=\"{uid++}\" name=\"Head\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection3} id=\"{uid++}\" name=\"Octopus\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection4} id=\"{uid++}\" name=\"Robot\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection5} id=\"{uid++}\" name=\"Cash Suitcase\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection6} id=\"{uid++}\" name=\"Citizens of Science\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection4} id=\"{uid++}\" name=\"Robo\" />\n\t<GalleryStacks lowresdir=\"images\" hiresdir=\"images/originals\" on:expand={handleExpand} imagecollection={collection1} id=\"{uid++}\" name=\"Kumo\" />\n</div>\n\n",
    "<script>\n  import Image from './Image.svelte';\n  import GalleryExpanded from './GalleryExpanded.svelte';\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n  import { fly, fade } from 'svelte/transition';\n  import { activeCollection, destroyingExpandedGallery, loadingSecondary } from './stores.js';\n  \n  export let imagecollection;\n  export let lowresdir;\n  export let hiresdir;\n  export let id;\n  export let name;\n\n  const dispatch = createEventDispatcher();\n\n  // Local stuff\n  let collection;\n  let secondLevel;\n  let darkness;\n  let fakeImages;\n  let firstImage;\n\n  // count for loading\n  let count = 0;\n  \n  let attemptingtoLoad = false;\n  let resetStacksBefore = false;\n\n  onMount(() => {\n\t\tfakeImages = collection.getElementsByTagName('span');\n    firstImage = collection.getElementsByTagName('img')[0];\n\t});\n  \n  // Rotate image stack on hover\n  function rotate() {\n    collection.style.transform = 'rotate(-1.5deg)';\n    Object.entries(fakeImages).forEach(([key, value]) => {\n      value.style.transform = 'rotate(' + (23/(imagecollection.length - 1) * (parseInt(key)+ 1))+ 'deg)';\n    })\n    firstImage.style.transform = 'scale(1.08) translateY(10px)';\n  }\n\n  // Un-Rotate image stack on hover out\n  function unRotate() {\n    collection.style.transform = 'rotate(0deg)';\n    Object.entries(fakeImages).forEach(([key, value]) => {\n      value.style.transform = 'rotate(' + (2 * (parseInt(key)+ 1))+ 'deg)';\n    })\n    firstImage.style.transform = 'scale(1)';\n  }\n  \n  // Initiate the gallery and expand the stack\n  function showContents(){\n    attemptingtoLoad = true;\n    dispatch('expand', {\n        active: id\n    }); \n\n    //this sets the loading to true.\n    loadingSecondary.update(n => true);\n  }\n\n  // Blow away the other stacks when we're initiating an Expanded Gallery\n  function blowStacks(){\n    var rect = collection.getBoundingClientRect();\n    let centerX = document.documentElement.clientWidth/2;\n    let centerY = document.documentElement.clientHeight/2;\n    \n    collection.style.transform = `translateX(${rect.left/3 - centerX/3}px) translateY(${rect.top/3 - centerY/3}px)`\n  }\n\n  // Function for bringing the stacks back after we've closed an Expanded Gallery\n  function resetStacks(){\n    if(!resetStacksBefore){\n      let images = collection;\n      var rect = collection.getBoundingClientRect();\n      collection.style.transform = `translateX(0px) translateY(0px)`\n\n      const sleep = msec => new Promise(resolve => setTimeout(resolve, msec));\n        destroyingExpandedGallery.update(n => true);\n        (async () => {\n          await sleep(200);\n          dispatch('expand', {\n              active: 0\n          });\n          attemptingtoLoad = false;\n          collection.classList.remove('no-pointer-events');\n        })();\n        resetStacksBefore = true;\n    }\n  }\n\n  // Lifecycle event. Calls whenever an update happens.\n  // some of this might need refactoring, not quite sure how it got like this.\n  afterUpdate(() => {\n    // If this is NOT the active collection.\n    if($activeCollection != id && $activeCollection!==0){\n      darkness = 'total';\n      collection.classList.add('notransition');\n      collection.classList.add('no-pointer-events');\n      blowStacks();\n    \n    // If this IS the active collection.\n    }else if($activeCollection === id){\n      darkness = 'none';\n      collection.classList.add('notransition');\n      resetStacksBefore = false;\n    \n    // If we're destroying the Expanded Gallery\n    }else if($destroyingExpandedGallery){\n      darkness = '';\n      collection.classList.remove('notransition');\n      collection.classList.add('no-pointer-events');\n      resetStacksBefore = false;\n      resetStacks();\n    }\n  });\n  \n  // Wanted to maybe have a loader, so this tells me when all Image components in an Expanded Gallery have loaded.\n  function handleLoadingComplete(event) {\n    count = count + event.detail.loadingComplete;\n    if(count === imagecollection.length){\n      loadingSecondary.update(n => false);\n      count = 0;\n    }\n\t}\n  \n</script>\n\n<style>\n  /* clean up these styles a little bro */\n  .total{\n    opacity: 0;\n    pointer-events: none;\n  }\n  .notransition{\n    opacity: 0;\n    transition: 0s !important;\n  }\n  .none{\n    z-index: 2 !important;\n    opacity: 0;\n  }\n\n  .dummyimage{\n    border: 1px solid #d6d6d6;\n    background: rgba(255,255,255,0.8);\n    border-radius: 4px;\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute; top: 0; left: 0;\n    transition: 0.15s transform ease-out;\n  }\n\n  .collection:hover span{\n    transition: 0.3s transform ease-out;\n  }\n\n  .collection{\n    position: relative;\n    transition: 0.2s all ease-out;\n  }\n\n  .no-pointer-events{\n    pointer-events: none;\n  }\n  /* .spinner {\n    animation: rotate 2s linear infinite;\n    z-index: 2;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: -25px 0 0 -25px;\n    width: 50px;\n    height: 50px;\n  }\n\n  .spinner .path {\n      stroke: rgb(26, 118, 211);\n      stroke-linecap: round;\n      animation: dash 1.5s ease-in-out infinite;\n  } */\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -55;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  .collection:hover{\n    transition: 0.3s all ease-out;\n  }\n\n  .collection :global(img) {\n    position: absolute;\n    top: 0; left: 0;\n    box-shadow: 0 0 2px #ccc;\n    transition: 0.15s all ease-out;\n    border-radius: 4px;\n  } \n  .collection:hover :global(img){\n    transition: 0.3s all ease-out;\n  }\n\n  .collection :global(img:first-child){\n    box-shadow: 0px 1px 3px rgba(90,90,90, 0.3)\n  }\n  .collection:hover :global(img:first-child){\n    box-shadow: 0px -5px 30px rgba(90,90,90, 0.3)\n  }\n\n  .breadcrumb{\n    /*TODO need this to be a sticky menu */\n    /* background: #efefef; */\n    opacity: 1;\n    position: fixed;\n    top: 0; left: 0;\n    width: 100vw; height: 20px;\n    animation: hello 0s forwards;\n    pointer-events: none;\n    z-index: 99;\n    padding: 10px;\n    cursor: pointer;\n    font-weight: bold;\n    font-size: 1.2em;\n  }\n  .breadcrumb p{\n    margin: 0;\n    position: relative;\n    display: block;\n    color: #333;\n    padding-left: 10px;\n    text-transform: uppercase;\n  }\n  .breadcrumb p:before, .breadcrumb p:after{\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0; top: 7px;\n    height: 6px; width: 2px;\n    background: currentColor;\n    transform: rotate(45deg);\n  }\n  .breadcrumb p span{\n    text-transform: none;\n    font-weight: 300;\n    color: #a5a4a4;\n  }\n  .breadcrumb p:after{\n    top: 10px;\n    transform: rotate(-45deg);\n  }\n  @keyframes hello{\n    0%{\n      opacity: 0;\n      pointer-events: none;\n    }\n    100%{\n      opacity: 1;\n      pointer-events: auto;\n    }\n  }\n\n  .loading--false{\n    opacity: 1;\n    pointer-events: auto;\n  }\n  .loading--true{\n    opacity: 0;\n    pointer-events: none;\n  }\n</style>\n\n\n{#if $activeCollection == id}\n  <div class=\"breadcrumb\" on:click={resetStacks} in:fly=\"{{ y: -40, duration: 400 }}\" out:fly=\"{{ y: -40, duration: 400 }}\" >\n    <p>{name} <span>({imagecollection.length} images)</span></p>\n  </div>\n{/if}\n<div class=\"collection {darkness}\" bind:this={collection} on:mouseenter={rotate} on:mouseleave={unRotate} on:click={showContents}>\n  <!-- in case we want a spinner \n  {#if $activeCollection == id}\n    <svg class=\"spinner\" viewBox=\"0 0 50 50\">\n    <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"3\"></circle>\n    </svg>\n  {/if} -->\n\n  <!-- Initial Stacked Gallery, we only load the first image -->\n  {#each imagecollection as image, index}\n    {#if index==0}\n      <Image image=\"{lowresdir}/{image.src}\" />\n    {:else}\n      <span class=\"dummyimage\" style=\"transform: rotate({index * 2}deg); z-index: -{index}; opacity: {1 - 1/imagecollection.length * index/1.2}\"></span>\n    {/if}\n  {/each}\n\n</div>\n\n<!-- Real Gallery, we load all images and then it can be expanded -->\n{#if attemptingtoLoad}\n   <div out:fade={{duration: 500}} class=\"loading--{$loadingSecondary}\">\n    <GalleryExpanded lowresdir={lowresdir} hiresdir={hiresdir} stack={imagecollection} originaltarget={collection} on:loadingComplete=\"{handleLoadingComplete}\"  />\n  </div>\n{/if}\n\n\n",
    "<script>\n\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n  export let image;\n  export let visible = 0;\n\n  const dispatch = createEventDispatcher();\n\n  onMount(async () => {\n    const res = await fetch(image);\n    //console.log(res);\n    if(res.status === 200){\n       image = res.url;\n       const loader = new Image(); //  the script equivalent to the html image element\n       loader.onload = () => {\n         visible = true;\n         dispatch('loadingComplete', {\n          loadingComplete: 1\n         });\n       }\n       loader.src = image;\n    }else{\n      visible = false\n    }\n  });\n  \n</script>\n\n<style>\n  .opacity--0{\n    opacity: 0;\n  }\n  .loader{\n    width: 100%;\n    position: absolute;\n    background: rgba(0,0,0,0.04);\n    z-index: 11;\n    left: 0;\n    display: block;\n    transition: 0.2s all;\n    /* animation: loading 4s infinite linear; */\n    pointer-events: none;\n  }\n  img{\n    display: block;\n    object-fit: cover;\n    transition: 0.4s all ease-out;\n    justify-self: center;\n    align-self: center;\n    min-width: 100%;\n    min-height: 100%;\n    width: 100%;\n    height: 100%;\n  }\n\n  @keyframes loading{\n    0%{\n      height: 0%;\n      top: auto;\n      bottom: 0;\n    }\n    50%{\n      height: 100%;\n      top: auto;\n      bottom: 0;\n    }\n    51%{\n      top: 0;\n      bottom: auto;\n      height: 100%;\n    }\n    100%{\n      top: 0;\n      bottom: auto;\n      height: 0%;\n    }\n  }\n</style>\n\n<img src=\"{image}\" alt=\"\" class=\"{visible ? '' : 'opacity--0'}\">\n{#if !visible}\n  <div class=\"loader\" style=\"background: #ccc\"></div>\n{/if}\n\n\n\n",
    "<script>\n  import Image from './Image.svelte';\n  import { onMount, afterUpdate, onDestroy, createEventDispatcher } from 'svelte';\n  import { destroyingExpandedGallery, loadingSecondary } from './stores.js';\n\n  export let stack;\n  export let lowresdir;\n  export let hiresdir;\n  export let originaltarget;\n\n  // Local stuff\n  let secondLevel;\n  let thirdLevel;\n  let images;\n  let imageCount;\n  let ExpandedBefore = false;\n  let ConsolidatedBefore = false;\n  let ready;\n  let current;\n  let y;\n  // count for loading\n  let count = 0;\n  const dispatch = createEventDispatcher();\n\n  // Function for bringing everything together.\n  function consolidateStuff(){\n    let rect = originaltarget.getBoundingClientRect();\n     \n    Object.entries(images).forEach(([key, value]) => {\n      let imageDivRect = value.getBoundingClientRect();\n      let transformedStyle = `translateX(${rect.x - imageDivRect.x}px) translateY(${rect.y - imageDivRect.y}px) rotate(${key * 2}deg)`;\n      \n      // if gallery is being closed/destroyed we want a quicker transition.\n      if($destroyingExpandedGallery){\n        value.classList.add('quicktransition');\n      }else{\n        value.parentNode.style.zIndex = imageCount - key;\n      }\n      // Set tranformed style.\n      value.style.transform = transformedStyle;\n    });\n\n  }\n\n  // Function for Expanding things into place.\n  function expandStuff(){\n    secondLevel.style.transform = `translateY(${scrollY}px)`\n    const sleep = msec => new Promise(resolve => setTimeout(resolve, msec));\n\n    (async () => {\n      await sleep(50);\n      Object.entries(images).forEach(([key, value]) => {\n        var imageDivRect = value.getBoundingClientRect();\n        value.classList.add('slowtransition');\n        value.style.transform = `translateX(0px) translateY(0px)`\n      });\n    })();\n  }\n\n  onMount(() => {\n    images = secondLevel.getElementsByTagName('img');\n    imageCount = secondLevel.getElementsByTagName('img').length;\n    consolidateStuff();\n    \n  });\n\n  afterUpdate(() => {\n    if($loadingSecondary && !ExpandedBefore){\n      expandStuff();\n      ExpandedBefore = true;\n    }\n    if($destroyingExpandedGallery && !ConsolidatedBefore){\n      consolidateStuff();\n      ConsolidatedBefore = true;\n    }\n  });\n\n  onDestroy(() => {\n    console.log('being destoryed');\n    destroyingExpandedGallery.update(n => false);\n  });\n\n  function loadLargeImages(event, index){\n    current = index;\n    event.preventDefault();\n    // after loading \n    ready = true;\n  }\n\n  function handleLoadingHiResComplete(event){\n    count = count + event.detail.loadingComplete;\n    if(count === stack.length){\n      // show the image that was clicked.\n      console.log(count);\n      console.log(current);\n      console.log(thirdLevel);\n\n      count = 0;\n    }\n  }\n\n  function showPrevious(){\n    console.log(`current image is ${current}`)\n    console.log(\"go prev\");\n    \n    if(current <= 0) {\n      current = stack.length - 1;\n    }else{\n      current--;\n    }\n    console.log(`current image is ${current}`)\n  }\n  function showNext(){\n    \n    if(current >= (stack.length - 1)) {\n      current = 0;\n    }else{\n      current++;\n    }\n    console.log(`current image is ${current}`)\n\n  }\n</script>\n\n<style>\n  .stack{\n    position: absolute !important;\n    top: 2em; right: 2em;\n    width: calc(100vw - 4em) !important;\n    z-index: 3;\n  }\n  .stack a{\n    display: block;\n  }\n  .stack :global(img) {\n    box-shadow: 0 0 2px #ccc;\n    border-radius: 4px;\n    transition: 0s all !important;\n    background: #ccc;\n  }\n  .stack :global(.slowtransition) {\n    transition: all 0.6s cubic-bezier(0,0,.13,1.33) !important;\n  }\n  .stack :global(.quicktransition) {\n    transition: transform 0.2s cubic-bezier(0,0,.13,1.2), opacity 0.3s ease-out !important;\n    opacity: 0;\n  }\n  .stack :global(img:first-child.quicktransition) {\n    transition: transform 0.2s cubic-bezier(0,0,.13,1.06) !important;\n    opacity: 1;\n  }\n\n  .gallery{\n    display: flex;\n    flex: 1 auto;\n    flex-basis: 25em;\n    flex-flow: row wrap;\n    align-content: flex-start;\n    justify-content: center;\n    height: 100%;\n    width: auto;\n    margin: 1em;\n  }\n  .gallery :global(img) {\n    width: calc(25em - 3em);\n    margin: 1em 1.5em 3em 1.5em;\n    height: 15em;\n    min-width: 0 !important;\n    min-height: 0 !important;\n    \n  }\n  /* Experimenting with grid. \n  .gallery{ \n    display: grid;\n    position: absolute;\n    grid-template-columns: 4fr 1fr 1fr;\n    grid-template-rows: repeat(3, 1fr);\n    grid-gap: 4em;\n    width: calc(100% - 8em);\n    height: 100%;\n    z-index: 2;\n  }\n  .gallery :global(img:first-child) {\n    grid-row-start: 1;\n    grid-row-end: -1;\n  } */\n  .hires{\n    position: fixed;\n    top: 0; left: 0;\n    z-index: 99;\n    height: calc(100vh - 40px); width: 100vw;\n    margin-top: 40px;\n    background: #222;\n  }\n  .hires :global(img){\n    object-fit: contain;\n    position: absolute; top: 0;\n  }\n  .hires div{\n    opacity: 0;\n    transition: 0.3s all;\n  }\n  .hires div.active{\n    opacity: 1;\n  }\n  .previous, .next{\n    position: absolute;\n    top: calc(50vh - 40px);\n    background: yellow;\n    height: 40px; width: 40px;\n  }\n  .previous{\n    left: 0;\n  }\n  .next{\n    right: 0;\n  }\n</style>\n\n<svelte:window bind:scrollY={y}/>\n<div class=\"stack gallery\" bind:this={secondLevel} >\n  {#each stack as image, index}\n    <a href=\"{hiresdir}/{image.src}\" on:click={e => loadLargeImages(e, index)}> \n      <Image image=\"{lowresdir}/{image.src}\" on:loadingComplete />\n    </a>\n  {/each}\n</div>\n\n{#if ready}\n  <div class=\"hires\" bind:this={thirdLevel} >\n    {#each stack as image, index}\n      <div class:active=\"{current === index}\">\n      <Image image=\"{hiresdir}/{image.src}\" on:loadingComplete={handleLoadingHiResComplete}/>\n      </div>\n    {/each}\n    <span class=\"previous\" on:click={showPrevious}></span>\n    <span class=\"next\" on:click={showNext}></span>\n  </div>\n{/if}"
  ],
  "names": [],
  "mappings": "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"
}